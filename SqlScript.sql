-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE public."Tokens"
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(250) NOT NULL,
    user_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.adresses
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    user_id integer NOT NULL,
    city_id integer NOT NULL,
    district_id integer NOT NULL,
    details character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.applications
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    job_position_id integer NOT NULL,
    individual_customer_id integer NOT NULL,
    description character varying NOT NULL,
    created_at date NOT NULL,
    updated_at date NOT NULL,
    is_active boolean NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.central_unit_users
(
    user_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    role_id integer NOT NULL,
    gender character varying(15) NOT NULL,
    first_name character varying(50) NOT NULL,
    last_name character varying(50) NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.cities
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.corporate_users
(
    user_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    company_name character varying(250) NOT NULL,
    web_site character varying(250) NOT NULL,
    approve_status boolean NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.districts
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.individual_users
(
    user_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    gender character varying(15) NOT NULL,
    first_name character varying(50) NOT NULL,
    last_name character varying(50) NOT NULL,
    identity_number character varying(11)[] NOT NULL,
    date_of_birth date NOT NULL,
    PRIMARY KEY (user_id)
);

CREATE TABLE public.job_postings
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    corporate_user_id integer NOT NULL,
    occupation_id integer NOT NULL,
    description character varying NOT NULL,
    city_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    PRIMARY KEY (id)
);

CREATE TABLE public.occupations
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying NOT NULL,
    created_at date NOT NULL,
    is_active boolean NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.phone_numbers
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    user_id integer NOT NULL,
    detail character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.roles
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(50) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE public.users
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    email character varying(50) NOT NULL,
    password_hash character varying(250) NOT NULL,
    is_active boolean NOT NULL,
    created_at date NOT NULL,
    updated_at date NOT NULL,
    PRIMARY KEY (id)
);

ALTER TABLE public."Tokens"
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.adresses
    ADD FOREIGN KEY (city_id)
    REFERENCES public.cities (id)
    NOT VALID;


ALTER TABLE public.adresses
    ADD FOREIGN KEY (district_id)
    REFERENCES public.districts (id)
    NOT VALID;


ALTER TABLE public.adresses
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.applications
    ADD FOREIGN KEY (individual_customer_id)
    REFERENCES public.individual_users (user_id)
    NOT VALID;


ALTER TABLE public.applications
    ADD FOREIGN KEY (job_position_id)
    REFERENCES public.job_postings (id)
    NOT VALID;


ALTER TABLE public.central_unit_users
    ADD FOREIGN KEY (role_id)
    REFERENCES public.roles (id)
    NOT VALID;


ALTER TABLE public.central_unit_users
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.corporate_users
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.individual_users
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;


ALTER TABLE public.job_postings
    ADD FOREIGN KEY (city_id)
    REFERENCES public.cities (id)
    NOT VALID;


ALTER TABLE public.job_postings
    ADD FOREIGN KEY (corporate_user_id)
    REFERENCES public.corporate_users (user_id)
    NOT VALID;


ALTER TABLE public.job_postings
    ADD FOREIGN KEY (occupation_id)
    REFERENCES public.occupations (id)
    NOT VALID;


ALTER TABLE public.phone_numbers
    ADD FOREIGN KEY (user_id)
    REFERENCES public.users (id)
    NOT VALID;

END;